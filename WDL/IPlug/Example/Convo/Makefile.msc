# IPlug ConvoEngine example Microsoft C/C++ makefile
# (c) Theo Niessink 2010-2013
# <http://www.taletn.com/>
#
# This software is provided 'as-is', without any express or implied
# warranty. In no event will the authors be held liable for any damages
# arising from the use of this software.
#
# Permission is granted to anyone to use this software for any purpose,
# including commercial applications, and to alter it and redistribute it
# freely, subject to the following restrictions:
#
# 1. The origin of this software must not be misrepresented; you must not
#    claim that you wrote the original software. If you use this software in
#    a product, an acknowledgment in the product documentation would be
#    appreciated but is not required.
# 2. Altered source versions must be plainly marked as such, and must not be
#    misrepresented as being the original software.
# 3. This notice may not be removed or altered from any source distribution.

# Usage (from the Windows SDK 7.0/7.1 or Visual Studio 2012 Command Prompt):
#
#    nmake /f Makefile.msc [configuration=Release|Debug|Tracer] [nosse2=1]
#                          [wdl=1 | r8b=1]
#
# Note: If you use wdl=1 to use WDL_Resampler, beware that its license is
# LGPL, see WDL/resample.h.
#
# If you use r8b=1 to use r8brain-free-src, you should place its source
# files (from <https://code.google.com/p/r8brain-free-src/>) in
# ../../../../r8brain/.

PROJECT = IPlugConvo
OUTFILE = $(PROJECT).dll

CPPFLAGS = $(CPPFLAGS) /EHsc /fp:fast /D "VST_API" /D "WIN32" /D "WINVER=0x0501" /D "_WIN32_WINNT=0x0501" /D "_WINDLL" /D "_MBCS" /D "IPLUG_NO_JPEG_SUPPORT" /MT /c /Fo"$(OUTDIR)/" /Fd"$(OUTDIR)/" /W3 /D "_CRT_SECURE_NO_WARNINGS" /nologo
LINKFLAGS = $(LINKFLAGS) /dll /subsystem:windows /libpath:"../../../lice/$(OUTDIR:Tracer=Release)" /libpath:"../../$(OUTDIR)" /dynamicbase:no /manifest:no /nologo

# Double precision processing
CPPFLAGS = $(CPPFLAGS) /D "WDL_FFT_REALSIZE=8" /D "WDL_CONVO_WANT_FULLPRECISION_IMPULSE_STORAGE"

!IFDEF WDL

CPPFLAGS = $(CPPFLAGS) /D "_USE_WDL_RESAMPLER"
RESAMPLER = "$(OUTDIR)/resample.obj"

!ELSE IFDEF R8B

CPPFLAGS = $(CPPFLAGS) /D "_USE_R8BRAIN"
RESAMPLER = "$(OUTDIR)/r8bbase.obj"

!ENDIF

!IF "$(TARGET_CPU)" == "x64" || "$(CPU)" == "AMD64" || "$(PLATFORM)" == "x64"

PLATFORM = X64
CPPFLAGS = $(CPPFLAGS) /favor:blend /wd4244
LINKFLAGS = $(LINKFLAGS) /machine:x64

!ELSE

!	IFNDEF NOSSE2
PLATFORM = Win32
CPPFLAGS = $(CPPFLAGS) /arch:SSE2
!	ELSE
PLATFORM = Win32_noSSE2
!	ENDIF
LINKFLAGS = $(LINKFLAGS) /machine:x86

!ENDIF

!IF !DEFINED(CONFIGURATION) && DEFINED(CPU) && DEFINED(APPVER) && !DEFINED(NODEBUG)
CONFIGURATION = Debug
!ELSE IF !DEFINED(CONFIGURATION)
CONFIGURATION = Release
!ENDIF

!IF "$(CONFIGURATION)" == "Release" || "$(CONFIGURATION)" == "Tracer"

CPPFLAGS = $(CPPFLAGS) /D "NDEBUG" /O2 /GS- /GR-
!	IF "$(CONFIGURATION)" == "Tracer"
CPPFLAGS = $(CPPFLAGS) /D "TRACER_BUILD"
!	ENDIF
LINKFLAGS = $(LINKFLAGS) /incremental:no /defaultlib:libcmt

!ELSE IF "$(CONFIGURATION)" == "Debug"

CPPFLAGS = $(CPPFLAGS) /D "_DEBUG" /RTCsu
!	IF "$(PLATFORM)" == "X64"
CPPFLAGS = $(CPPFLAGS) /Zi
!	ELSE
CPPFLAGS = $(CPPFLAGS) /ZI
!	ENDIF
LINKFLAGS = $(LINKFLAGS) /debug /nodefaultlib:libcmt /defaultlib:libcmtd

!ENDIF

OUTDIR = $(PLATFORM)/$(CONFIGURATION)

!MESSAGE $(PROJECT) - $(CONFIGURATION)|$(PLATFORM)
!MESSAGE

all : dll

dll : "$(OUTDIR)" "$(OUTDIR)/$(OUTFILE)"

"$(OUTDIR)" :
!IF !EXIST("$(OUTDIR)/")
	mkdir $@
!ENDIF

"$(OUTDIR)/$(PROJECT).obj" : $(PROJECT).cpp $(PROJECT).h resource.h
	$(CPP) $(CPPFLAGS) $(PROJECT).cpp

"$(OUTDIR)/convoengine.obj" : ../../../convoengine.cpp
	$(CPP) $(CPPFLAGS) $**

"$(OUTDIR)/fft.obj" : ../../../fft.c
	$(CPP) $(CPPFLAGS) $**

"$(OUTDIR)/resample.obj" : ../../../resample.cpp
	$(CPP) $(CPPFLAGS) $**

"$(OUTDIR)/r8bbase.obj" : ../../../../r8brain/r8bbase.cpp
	$(CPP) $(CPPFLAGS) $**

"$(OUTDIR)/$(OUTFILE)" : "$(OUTDIR)/$(PROJECT).obj" "$(OUTDIR)/convoengine.obj" "$(OUTDIR)/fft.obj" $(RESAMPLER)
	link $(LINKFLAGS) /out:$@ /implib:"$(OUTDIR)/$(PROJECT).lib" $** lice.lib IPlug.lib wininet.lib shell32.lib user32.lib gdi32.lib comdlg32.lib advapi32.lib comctl32.lib

clean :
!IF EXIST("$(OUTDIR)/")
	rmdir /s /q "$(OUTDIR:/=\)"
!ENDIF
